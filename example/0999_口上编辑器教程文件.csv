cid,behavior_id,adv_id,premise,context
口上id,触发口上的行为id,口上限定的剧情npcid,前提id,口上内容
str,int,int,str,str
0,0,0,0,1
口上配置数据,,,,
1,99,999,high_1,*0.1 前言
2,99,999,high_1,  *本文为示范性的人物口上模板教程，说明文字统一使用空白指令，并在文本开头有个*进行标记
3,99,999,high_1,  *本教程会由易到难，配合操作例子，帮助你熟练使用编辑器写出自己的角色口上
5,99,999,high_1,  *传统era里，代码的门槛拦住了大量有创作欲望的口上作者，有代码基础的作者们也在不断重复造轮子
6,99,999,high_1,  *erArk为了解决这个问题，和游戏本体同步开发了编辑器，使用特制的接口，让不写代码就写口上成为了可能
7,99,999,high_1,  *因为游戏和编辑器还在早期开发测试中，如果遇到BUG欢迎反馈
10,99,999,high_1,*————————————分隔符————————————
11,99,999,high_1,  *0.2 准备工作
13,99,999,high_1,  *首先，请点击最上方的【使用说明书】，里面有一些基础的操作说明
15,99,999,high_1,  *你只需要大概浏览一下，不需要立刻掌握，有需要的时候随时查看
17,99,999,high_1,  *为了使用本教程，你需要做以下准备工作：
18,99,999,high_1,  *①把游戏目录下config.ini文件中的debug改为1，以便在游戏中开启debug模式
19,99,999,high_1,  *②在游戏中，建立一个测试用的新档，初始招募你要写的角色
20,99,999,high_1,  *③在游戏系统设置中，将[通用文本]的选项改为[仅使用角色专属文本]，以去掉通用文本的干扰
21,99,999,high_1,  *④找一个地方，用来备份你的口上文件，你永远不知道你会因为什么奇怪的原因而遗失你的劳动成果，所以，备份吧！
100,99,999,high_1,*————————————分隔符————————————
101,99,999,high_1,*1.1 基础
102,99,999,high_1,  *首先，我们来看看最基础的一条口上是什么样的，点一下第103条看看↓
103,101,999,high_1,这是第103条，是一条聊天指令的测试口上，触发者是{Name}，交互对象是{TargetName}
104,99,999,high_1,  *↑可以在上面，[触发指令与状态]中看到它的触发指令是[聊天]，说明该条目是一个聊天指令会触发的口上
105,99,999,high_1,  *还可以看到条目的角色id为999，这限制了角色专属的口上不会在别人身上触发
106,99,999,high_1,  *另外，当角色id为0时，代表是通用文本，也就是地文，谁都可以触发
107,99,999,high_1,  *请进行以下步骤：
108,99,999,high_1,  *①点击103条，将左上角的角色id，改为你要写的角色id，保存
109,99,999,high_1,  *②将本文件复制到 游戏根目录/data/talk/chara/，这里你能够看到其他角色的口上文件
110,99,999,high_1,  *③更改文件名为规定格式，xxxx_角色名.csv，比如，0999_测试.csv
111,99,999,high_1,  *④开游戏，读测试档，找到你的角色，点击聊天指令
112,99,999,high_1,  *正常来说，你应该已经触发了这条口上，如果没有，检查上述①~④步骤是否有遗漏
120,99,999,high_1,*————————————分隔符————————————
121,99,999,high_1,*1.2 口上快速测试
122,99,999,high_1,  *在刚才的触发中，你应该看到{Name}显示的是玩家的名字，{TargetName}显示的是角色的名字
123,99,999,high_1,  *它代表着写口上的一个基础概念，代码中的变量文本，会在游戏中被替换成实际的内容
124,99,999,high_1,  *你可以在右下角的文本区中按下鼠标右键，可以看到所有你可用的变量文本
125,99,999,high_1,  *在你迫不及待想要试试手之前，稍等！
126,99,999,high_1,  *erArk有个特别的功能，可以同步编辑器的编辑和游戏的口上读取，实现所见即所得，一边写一边测
128,99,999,high_1,  *请进行以下步骤：
129,99,999,high_1,  *①游戏读取测试档，找到你要写的角色，点击[开启debug模式]，再点击[快速测试口上]，会提示你是否要刷新文件
130,99,999,high_1,  *②编辑器读取刚才保存在/data/talk/chara/的文件
131,99,999,high_1,  *③点击上面的第103条，开始进行你的尝试，修改下文字，插入一些变量文本什么的，然后保存
132,99,999,high_1,  *④回到游戏画面，点击刷新口上文件后测试，会进行一个数据重载，然后就可以测试了
133,99,999,high_1,  *正常来说，你在输入完角色id和口上编号后，会看到一个详细的测试页面，如果没有，检查上述①~④步骤是否有遗漏
200,99,999,high_1,*————————————分隔符————————————
201,99,999,high_1,*2.1 触发者与交互对象
202,99,999,high_1,  *在目前为止的文字中，以及编辑器的页面中，你已经看到了好几次“触发者”和“交互对象”了
203,99,999,high_1,  *那么，这两个词到底是什么意思？
204,99,999,high_1,  *当你在游戏中，对一个干员使用一个指令时，显然，你是那个触发者，干员是你的交互对象
205,99,999,high_1,  *但在你的游玩过程中，你肯定也见到过，干员自己使用了某些工作和娱乐的指令，或者主动和你、和其他干员聊天什么的
206,99,999,high_1,  *此时的触发者就不再是玩家，而是干员触发的，指令的目标可能也变成了玩家，或其他干员
207,99,999,high_1,  *综上所述，一个指令是谁发起的，谁就是指令的触发者，指令的目标是谁，谁就是指令的交互对象
208,99,999,high_1,  *当我们写口上的时候，显然不希望应该由干员对玩家说的话，因为触发者错误而变成玩家对干员说的
209,99,999,high_1,  *这就到了使用前提的时候了！
210,99,999,high_1,  *点击以下的221~224号条目，看看它们的前提
221,101,999,sys_0,这是第221条，是一条聊天指令的测试口上，这条口上的前提是玩家触发的该指令\n所以这条口上只能在玩家对NPC聊天时触发\n当前触发者：{Name}\n当前交互对象：{TargetName}
222,101,999,sys_1,这是第222条，是一条聊天指令的测试口上，这条口上的前提是NPC触发的该指令\n所以这条口上只能在NPC对玩家，或者NPC对NPC聊天时触发\n当前触发者：{Name}\n当前交互对象：{TargetName}
223,101,999,sys_1&sys_4,这是第223条，是一条聊天指令的测试口上，这条口上的前提是NPC触发的该指令，且交互对象是玩家\n所以这条口上只能在NPC对玩家聊天时触发\n当前触发者：{Name}\n当前交互对象：{TargetName}
224,101,999,sys_1&sys_5,这是第224条，是一条聊天指令的测试口上，这条口上的前提是NPC触发的该指令，且交互对象不是玩家\n所以这条口上只能在NPC对其他NPC聊天时触发\n当前触发者：{Name}\n当前交互对象：{TargetName}
231,101,999,high_1,  *这些前提可以在右上角的[前提列表]-[整体修改]-[指令_触发与交互]来自由增加或删除
232,101,999,high_1,  *一个指令是玩家和NPC都可以触发，还是只有玩家能触发，或者只有NPC能触发，会在左上方指令后面的[触发人:]中显示
233,101,999,high_1,  *你同样可以在修改完221~224条目的角色id后，进入游戏测试这些口上的具体触发情况
234,99,999,high_1,*————————————分隔符————————————
235,99,999,high_1,*2.2 综合型数值前提
236,99,999,high_1,  *还是聊天指令，让我们来想一个实际场景，干员刚被招募，所以好感还很低，比如说低于100
237,99,999,high_1,  *内容应该是诸如，干员有些紧张的和博士聊天气，或者冷漠地汇报工作，根据性格而定，总之肯定是陌生的语气
238,99,999,high_1,  *那么，我们想读取并检测干员的属性中的好感度，让这句口上仅在好感低于100时才会触发，该怎么做？
239,99,999,high_1,  *点击看一下第241号条目
241,101,999,sys_0&sys_5,这是第241条，是一条聊天指令的测试口上，这条口上的前提是①玩家触发的该指令，②交互对象不是玩家，③交互对象的好感小于100\n当前触发者：{Name}\n当前交互对象：{TargetName}
242,99,999,high_1,  *在第241条口上中，我们已经加入了两个前提，由玩家触发，且交互对象是NPC。
243,99,999,high_1,  *现在需要你加上第三条前提，交互对象的好感度小于100，这样就可以达到目标了
244,99,999,high_1,  *请进行以下步骤：
245,99,999,high_1,  *①选择241条目，点击右上角的[前提列表]-[综合型数值前提]，会弹出一个新的窗口
246,99,999,high_1,  *②将[待选择]选择为[好感]，将默认的[自己]更改为[交互对象]，将默认的[大于]改为[小于]，在数值里填上100，确定
247,99,999,high_1,  *你的结果应该和下面的第251号条目↓里的前提是一样的，如果不一样，请检查上述①~②步骤是否有遗漏
251,101,999,sys_0&sys_5&CVP_A2_F_L_100,这是第251条，是一条聊天指令的测试口上，这条口上的前提是①玩家触发的该指令，②交互对象不是玩家，③交互对象的好感小于100\n当前触发者：{Name}\n当前交互对象：{TargetName}
252,99,999,high_1,  *同理，你可以使用综合数值前提来自由限制角色的好感、信赖、能力、素质、经验、状态……等几乎所有数值相关的角色属性
253,99,999,high_1,  *除了角色属性之外，游戏的当前时间、玩家的前一个指令等部分系统量也可以在这里自由选择使用
254,99,999,high_1,  *这些数值前提的自由搭配组合，既在广度上能涵盖大部分的数值需求，也在细节上能设计出特定小情况下的特殊差分
255,99,999,high_1,  *不过有两个进阶项的，[角色的口上flag]，以及[嵌套的子事件]，我们要到事件的部分再进行介绍，请暂时忽略
256,99,999,high_1,  *有兴趣的话，可以简单随便写点试验一下，然后再看后面的部分
257,99,999,high_1,*————————————分隔符————————————
258,99,999,high_1,*2.3 分类前提
259,99,999,high_1,  *有些情况下，我们还需要数值以外的前提，比如角色当前在哪里，比如角色是否是玩家的助理等等
260,99,999,high_1,  *这个时候，在右上角的[前提列表]-[整体修改]里就可以看到按类别划分的各种详细前提，涵盖了游戏的各个方面
261,99,999,high_1,  *大部分前提靠名字都能理解，如果需要的话，可以在游戏源码的 Script\Core\constant_promise.py 文件中跳转至具体定义
263,99,999,high_1,  *在整体修改中寻找前提时，既可以从分类里直接挑选，也可以在前提框上方的搜索框中使用关键词进行搜索
264,99,999,high_1,  *这里给出一些简单的示范例子，有兴趣的可以按照下述的271~274号条目，按照说明文本进行对应修改
265,99,999,high_1,  *请进行以下步骤：
266,99,999,high_1,  *①修改各条目的角色id
267,99,999,high_1,  *②根据描述文本，修改各条目的触发指令
268,99,999,high_1,  *③根据描述文本，增加各条目的前提，包括分类前提和综合数值前提
271,101,999,sys_0,这是第271条，是一条处理公务指令的测试口上，这条口上的前提是:\n①玩家触发的该指令，②交互对象是助理，③交互对象心情愉快，④(综合数值前提)交互对象的学识技能大于等于4\n当前触发者：{Name}\n当前交互对象：{TargetName}
272,101,999,sys_1,这是第272条，是一条睡觉指令的测试口上，这条口上的前提是：\n①NPC触发的该指令，②在自己宿舍中，③该地点仅有玩家与该角色，④自己欲望值≥80%，⑤自己当前是危险期，⑥(综合数值前提)自己攻略程度大于等于2\n当前触发者：{Name}\n当前交互对象：{TargetName}
273,101,999,sys_0,这是第273条，是一条亲吻指令的测试口上，这条口上的前提是：\n①玩家触发的该指令，②在图书馆中，③该地点里有除了玩家和该角色之外的人，④交互对象没有穿着内裤，⑤交互对象当前小穴和子宫总精液量大于200ml\n当前触发者：{Name}\n当前交互对象：{TargetName}
274,101,999,sys_0,这是第274条，是一条背后位指令的测试口上，这条口上的前提是：\n①玩家触发的该指令，②对方有无意识_平然状态，③交互对象本次H中绝顶次数>5，④玩家本次H中射精次数>1，⑤交互对象体力低于30%，⑥交互对象A正插入震动棒\n当前触发者：{Name}\n当前交互对象：{TargetName}
300,99,999,high_1,*————————————分隔符————————————
301,99,999,high_1,*3.1 二段结算
302,99,999,high_1,  *你在2.3中选择条目的指令的时候可能已经见过了，有个类别叫二段结算
303,99,999,high_1,  *那么，什么是二段结算？
304,99,999,high_1,  *一个经典场景是，玩家对干员进行了一个H指令，在指令本身之外，干员还触发了一次小绝顶，并获得了一个刻印
305,99,999,high_1,  *显然，你对目标使用的这个指令会进行一个结算，此时触发的为[一段结算]，[一段结算]是唯一的，角色有且只能有一个
306,99,999,high_1,  *在完成了[一段结算]后，还会检测当前的各数值是否会触发了如绝顶、刻印、道具、动作等，这些则是[二段结算]
307,99,999,high_1,  *就像上面的例子一样，角色能够同时有多个[二段结算]，各个[二段结算]独立结算，且都在[一段结算]之后再结算
308,99,999,high_1,  *在对一个角色的攻略过程中，角色绝大部分的[二段结算]都会被触发，大部分二段结算只会触发一次，但有些会反复触发
309,99,999,high_1,  *总之，除了写[一段结算]之外，不要忘记还有[二段结算]
310,99,999,high_1,  *以下是一些二段结算的例子
311,1331,999,high_999,这是第311条，是一条初次见面的测试口上，这条口上的前提是:①优先度为999的空白前提\n当前触发者：{Name}\n当前交互对象：{TargetName}
312,1012,999,high_2&CVP_A1_E|4_L_10,这是第312条，是一条结算V小绝顶的测试口上，这条口上的前提是:①优先度为2的空白前提，②自己V经验小于10\n当前触发者：{Name}\n当前交互对象：{TargetName}
313,1303,999,high_999,这是第313条，是一条结算获得恋人的测试口上，这条口上的前提是:①优先度为999的空白前提\n当前触发者：{Name}\n当前交互对象：{TargetName}
314,1203,999,high_2&CVP_A1_A|71_G_4,这是第314条，是一条结算口交中的测试口上，这条口上的前提是:①优先度为2的空白前提，②自己能力舌技大于4\n当前触发者：{Name}\n当前交互对象：{TargetName}
317,99,999,high_1,*————————————分隔符————————————
318,99,999,high_1,*3.2 权重
319,99,999,high_1,  *你可能注意到了，在右上角的前提栏里有行文字在给你计算并显示当前条目的权重
320,99,999,high_1,  *那么，权重是什么？
321,99,999,high_1,  *一个经典的数学题，袋子里有四个球，一个白球，一个黄球，两个黑球，摸到黑球的概率是多少？
322,99,999,high_1,  *所有的地文和口上共同组成了这个袋子，也就是文本池
323,99,999,high_1,  *每条文本的权重，则代表这个颜色的球有多少个
324,99,999,high_1,  *当一个指令被结算（当然同时包括一段结算和二段结算），要输出文本时，代码就要开始创造这个袋子了
325,99,999,high_1,  *首先会找到所有该指令结算的文本，包括通用文本(也就是地文)，和符合id的角色专属文本(也就是口上)
326,99,999,high_1,  *然后会判定这条文本的前提是否全部满足条件，比如有一个前提要求好感大于1000，现在只有800，不满足，那这条文本就不会进这个袋子
327,99,999,high_1,  *当一条文本的全部前提都满足时，它会进到文本池里，并且计算最终权重，也就是这种球的数量
328,99,999,high_1,  *当该指令的全部文本都计算完毕后，就会开始摸球，也就是根据权重从文本池里面抽一个出来
329,99,999,high_1,  *那么，我们该如何改变一条口上的权重呢？
330,99,999,high_1,  *右上角的[前提列表]-[整体修改]-[指令_权重]中提供了从1~999的空白权重前提，选上之后会进行加算，具体可见计算过程和结果
331,99,999,high_1,  *为了增大口上出现的概率，降低地文出现的概率，所以口上相对于地文会有额外的乘3系数，在计算公式也能看得到
332,99,999,high_1,  *当你想要让一条口上以标准概率出现时，可以不使用权重前提，这样会以默认的1*3=3的权重进入文本池
333,99,999,high_1,  *当你想要让一条口上更为频繁的出现时，可以给它+1，+2，+5，或者更多
334,99,999,high_1,  *当你想要让一条口上只要满足条件就一定会出现时，可以直接使用+999权重，在概率上来说，差不多算是必触发了
335,99,999,high_1,  *另外，别忘了玩家还可以在设置中选择是否使用通用文本(也就是地文)，不使用的时候，文本池里就只有口上了
336,99,999,high_1,  *以下是关于权重的测试用例：
341,101,999,sys_0,这是第341条，是一条聊天指令的测试口上，这条口上的前提是:①玩家触发的该指令\n当前触发者：{Name}\n当前交互对象：{TargetName}
342,101,999,sys_0&high_1,这是第342条，是一条聊天指令的测试口上，这条口上的前提是:①玩家触发的该指令，②优先度为1的空白前提\n当前触发者：{Name}\n当前交互对象：{TargetName}
343,101,999,sys_0&high_5,这是第343条，是一条聊天指令的测试口上，这条口上的前提是:①玩家触发的该指令，②优先度为5的空白前提\n当前触发者：{Name}\n当前交互对象：{TargetName}
344,101,999,sys_0&high_999,这是第344条，是一条聊天指令的测试口上，这条口上的前提是:①玩家触发的该指令，②优先度为999的空白前提\n当前触发者：{Name}\n当前交互对象：{TargetName}
400,99,999,high_1,*————————————分隔符————————————
401,99,999,high_1,*4.1 从哪里开始？
402,99,999,high_1,  *到这里的话，你应该已经掌握了口上编辑器的大部分功能了
403,99,999,high_1,  *每个人都有自己的写作习惯，以下建议仅供参考：
404,99,999,high_1,  *①优先写那些玩家会遇到的指令
405,99,999,high_1,  *②给常用的指令加上更多的条件差分
406,99,999,high_1,  *③列一个简要的大纲，决定角色是走恋慕线还是隶属线，还是丰富到两者均有
407,99,999,high_1,  *④不必填满所有指令，不喜欢的玩法、自己不用的指令、不感兴趣的XP都可以跳过
408,99,999,high_1,  *⑤适当地参考一下其他角色的口上，借鉴他们的思路与条目
409,99,999,high_1,  *⑥记得测试，避免写好了但是前提错了，导致无法触发
410,99,999,high_1,  *⑦有意识地突出角色在不同阶段的改变，比如攻略推进下的态度改变，能力成长下的水平改变
411,99,999,high_1,  *⑧从官方档案、同人文与同人图、其他作品中类似设定的角色来寻找灵感
412,99,999,high_1,  *⑨OOC(Out Of Character)是个模糊的概念，可以以此提醒自己不应太过跳脱，但也不要因此束手束脚
413,99,999,high_1,  *⑩创作应是愉快而兴奋的，让自己开心一点，陷入纠结或者空白的时候就先休息一下吧
